// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.svg"
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String?   @unique
  password       String?
  role           Role?     @default(USER)
  email_verified DateTime? @map("email_verified")
  image          String?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  store_org   StoreOrg? @relation(fields: [store_orgId], references: [id])
  store_orgId String?
  Product     Product[]

  @@map("users")
}

model StoreOrg {
  id              String  @id @default(uuid())
  name            String
  logo            String?
  primary_color   String?
  secondary_color String?
  address         String?

  User     User[]
  Supplier Supplier[]
  Product  Product[]

  @@map("store_org")
}

model Product {
  id             String  @id @default(dbgenerated("nanoid(10)")) @db.VarChar(12)
  name           String
  description    String?
  purchase_price Float
  sale_price     Float?
  image          String?

  supplier    Supplier? @relation(fields: [supplier_id], references: [id])
  supplier_id String?

  store_org    StoreOrg? @relation(fields: [store_org_id], references: [id])
  store_org_id String?

  user    User?   @relation(fields: [user_id], references: [id])
  user_id String?

  ProductVariant ProductVariant[]
  ProductSale    ProductSale[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("product")
}

model ProductVariant {
  id String @id @default(uuid())

  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  color       String?
  size        String?
  quantity    Float
  ProductSale ProductSale[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("product_variant")
}

model Sale {
  id          String   @id @default(uuid())
  sale_date   DateTime @default(now())
  total_price Float
  discount    Float?
  real_price  Float

  ProductSale ProductSale[]

  @@map("sale")
}

model ProductSale {
  id       String @id @default(uuid())
  quantity Int

  sale    Sale   @relation(fields: [sale_id], references: [id])
  sale_id String

  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  variant            ProductVariant @relation(fields: [product_variant_id], references: [id])
  product_variant_id String

  @@map("product_sale")
}

model Supplier {
  id        String    @id @default(uuid())
  name      String
  telephone String?
  address   String?
  city      String?
  state     String?
  cep       String?
  Product   Product[]

  store_org    StoreOrg? @relation(fields: [store_org_id], references: [id])
  store_org_id String?

  @@map("supplier")
}

enum Role {
  USER
  ADMIN
}

enum ProductTransactionType {
  STOCK_IN
  STOCK_OUT
}

enum ProductTransactionStatus {
  DONE
  CANCELED
  WAITING
}

enum FinancialHistoryType {
  REVENUE
  EXPENSE
}

enum PaymentMethod {
  PIX
  MONEY
  CARD
}
